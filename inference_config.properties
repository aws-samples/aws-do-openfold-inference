openfold_model_name=finetuning_ptm_2
processor=gpu 
s3bucket=openfold-smml
output_dir_base=/fsx-shared/openfold/cameo/inference_output/
alignment_dir=/fsx-shared/openfold/cameo/r6i_xlarge_run3_16GB/
config_preset=model_1_ptm
use_precomputed_alignments=True
skip_relaxation=True
no_cpus=4
# number of models per model server
num_models=1

# service_port=8080 - port on which model service will be exposed
service_port=8080

runtime=kubernetes


# Kubernetes-specific deployment settings
# instance_type = c5.xxx | g4dn.xlarge | g4dn.12xlarge | inf1.xlarge | inf1.6xlarge | ...
# A node group with the specified instance_type must exist in the cluster
# The instance type must have the processor type configured above
instance_type=g4dn.xlarge
# num_servers - number of model servers to deploy
# note that more than one model server can run on a node with multiple cpu/gpu/inferentia chips.
# example: 4 model servers fit on one inf1.6xlarge instance as it has 4 inferentia chips.
num_servers=1
# Kubernetes namespace
##namespace=mpi
# Kubernetes app name
app_name=openfold-${processor}
app_dir=app-${app_name}-${instance_type}

# Alignment precomputation settings
#alignment_instance_type=c6i.12xlarge
#alignment_num_servers=2
#alignment_app_name=openfold-alignment
#alignment_app_dir=app-${app_name}-${alignment_instance_type}


# Test settings
test_image_name=test-openfold
test_image_tag=:v6
# request_frequency - time to sleep between two consecutive requests in curl tests
request_frequency=0.01
# Stop random request test after num_requests number of requests
num_requests=30
# Number of test containers to launch (default=1), use > 1 for scale testing
num_test_containers=1
# test_instance_type - when runtime is kubernetes, instance type on which test pods will run
test_instance_type=c5.xlarge
# test_namespace - when runtime is kubernetes, namespace where test pods will be created
test_namespace=default
# test_dir - when runtime is kubernetes, directory where test pod manifests are stored
test_dir=app-${test_image_name}-${instance_type}


